#!/usr/bin/python

# Beuarg - an OpenERP code puker
# Copyright (C) 2013 Laurent Peuch <cortex@worlddomination.be>
#                    Railnova SPRL <railnova@railnova.eu>
#
# This file is part of Beuarg.
#
# Beuarg is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# Beuarg is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Beuarg.  If not, see <http://www.gnu.org/licenses/>.

import os
import sys
import argh

try:
    from beuarg import get_classes_from_string
except ImportError:
    sys.path.append(os.path.realpath(".."))
    from beuarg import get_classes_from_string

security_template = """\
id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
access_user_model_%s,access_user_model_%s,model_%s,railfleet.group_railfleet_user,1,0,0,0
access_manager_model_%s,access_manager_model_%s,model_%s,railfleet.group_railfleet_manager,1,0,0,0
access_superuser_model_%s,access_superuser_model_%s,model_%s,railfleet.group_railfleet_superuser,1,1,1,1
"""

def get_model_from_name(models, model_name):
    if models.get(model_name):
        return models[model_name]

    for i in models.values():
        if i.get("_name") == model_name:
            return i

    for i in models.values():
        if i.get("_inherit") == model_name:
            return i

    raise KeyError("Model name '%s' not in %s" % (model_name, models))

def display_available_models(models):
    for model_name, model_content in models.items():
        print " * " + model_name + ": " + model_content.get("_name", model_content.get("_inherit", "WARNING: this model doesn't have neither an _inherit nor a _name"))

def security(file_name, *args):
    models = get_classes_from_string(open(file_name).read())
    if len(args) == 0:
        print "Give me one at least of those models bellow:"
        display_available_models(models)
        return

    for model_name in args:
        if model_name not in models.keys() and model_name not in map(lambda x: x.get("_name"), models.values()) and model_name not in map(lambda x: x.get("_inherit"), models.values()):
            print model_name, "not in file ('%s')"
            print "Here are the available models:"
            display_available_models(models)
            sys.exit(1)

    for model_name in args:
        print security_template % tuple([get_model_from_name(models, model_name)["_name"].replace(".", "_")]*9)
        print

parser = argh.ArghParser()
parser.add_commands([security])

if __name__ == '__main__':
    parser.dispatch()
